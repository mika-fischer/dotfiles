#!/bin/sh

# Script for using ViM as a PAGER.
# Based on Bram's less.sh.
# Version 1.5.5
# git://github.com/rkitover/vimpager.git

# Mika Fischer: Removed gvim stuff

# Just pass through if not on a tty
if [ ! -t 1 ]; then
	exec cat "$@"
fi

case `uname -s` in
	Linux) linux=1 ;;
	SunOS) solaris=1 ;;
        Darwin) osx=1; bsd=1 ;;
	CYGWIN*) cygwin=1 ;;
	MINGW*) msys=1 ;;
	*) bsd=1 ;;
esac

less_vim() {
	vim_cmd='vim -X -R'

	vimrc=""

	if [ -n "$VIMPAGER_RC" ]; then
		vimrc=$VIMPAGER_RC
	elif [ -f ~/.vimpagerrc ]; then
		vimrc=~/.vimpagerrc
	elif [ -f ~/_vimpagerrc ]; then
		vimrc=~/_vimpagerrc
	fi

	if [ -n "$vimrc" ]; then
		$vim_cmd \
		--cmd 'let vimpager=1' \
		-u $vimrc \
		-c 'set scrolloff=5 | runtime! macros/less.vim | set foldlevel=999 | set mouse=h | set nonu' \
		-c 'nmap <ESC>u :nohlsearch<cr>' \
		"${@:--}"
	else
		$vim_cmd \
		--cmd 'let vimpager=1' \
		-c 'set scrolloff=5 | runtime! macros/less.vim | set foldlevel=999 | set mouse=h | set nonu' \
		-c 'nmap <ESC>u :nohlsearch<cr>' \
		"${@:--}"
	fi
}

awk_pstree() {
	awk -v mypid=$1 '{
		cmd[$1]=$3
		ppid[$1]=$2
	}
	END {
		while (mypid != 1 && cmd[mypid]) {
			ptree=mypid " " cmd[mypid] "\n" ptree
			mypid=ppid[mypid]
		}
		print ptree
	}'
}

do_ptree() {
	if [ -n "$solaris" ]; then
		# Tested on Solaris 8 and 10
		ptree $$
	elif [ -n "$cygwin" -o -n "$msys" ]; then
		ps | awk '{ print $1 "\t" $2 "\t" $NF }' | awk_pstree $$
	else
		# Tested on Linux and OS X
		ps awo pid=,ppid=,comm= | awk_pstree $$
	fi
}

# Check if called from man, perldoc or pydoc
if do_ptree | awk '$2 ~ /(^|\/)(man|perl(doc)?([0-9.]*)?|py(thon|doc|doc2))/ {t=1} END { exit 1-t }'; then
	extra_cmd="set ft=man"
fi

trap "rm -rf /tmp/vimpager_$$" HUP INT QUIT ILL TRAP KILL BUS TERM

mkdir /tmp/vimpager_$$

filename=${@:-stdin}
filename=`echo $filename | tr '/' '_'`
filename=/tmp/vimpager_${$}/$filename

case "$@" in
	*.gz) gunzip -c "$@" | sed -e 's/\[[^m]*m//g' -e 's/.//g' > $filename ;;
	*.Z) uncompress -c "$@" | sed -e 's/\[[^m]*m//g' -e 's/.//g' > $filename ;;
	*) sed -e 's/\[[^m]*m//g' -e 's/.//g' "$@" > $filename ;;
esac

# if file is zero length, exit immediately
if [ ! -s $filename ]; then
	exit
fi

# On cygwin it might be the win32 gvim, but windows paths work for cygwin
# vim just fine as well.
if [ -n "$cygwin" ]; then
	filename=`cygpath -w $filename`
fi

less_vim -c "${extra_cmd:-echo}" $filename </dev/tty

# CONTRIBUTORS:
#
# Rafael Kitover
# Antonio Ospite
# Jean-Marie Gaillourdet
# Perry Hargrave
# Koen Smits
# Ivan S. Freitas <ivansichfreitas@gmail.com>
# Wout Mertens (Solaris compatibility, less processes)
# Jacobo de Vera (add -X option for faster startup)

# vim:noet ts=8 sts=8 sw=8 nolist:
