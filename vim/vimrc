""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Options
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible

" Pathogen
filetype off
runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()
syntax on
filetype plugin indent on

" Listchars
set list
set listchars=tab:Â»Â·,trail:Â·

" Always keep n lines visible above and below the cursor
set scrolloff=3

" Enable auto-indentation
set autoindent

" Show incomplete commands
set showmode

" Indicate matching brackets
set showmatch

" Hide buffers
set hidden

" Nicer completion
set wildmenu
set wildmode=list:longest

" Highlight cursor line
"set cursorline

" Show current position
set ruler

" Make backspace more powerful
set backspace=indent,eol,start

" Always display status line
set laststatus=2

" Don't make backups
set nobackup

" Remember more recent commands
set history=50

" Enable incremental search
set incsearch

" Enable search match highlighting
set hlsearch

" Display line numbers
set number

" Terminal mouse support
set ttymouse=xterm
set mouse=a

" Use existing windows when jumping to errors etc.
set switchbuf=useopen

" Tab settings
set expandtab
set shiftwidth=4
set tabstop=4
set smarttab

" Insert mode completion behavior
set completeopt=menuone,menu,longest,preview

" Use ack instead of grep
set grepprg=ack

set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-30.([ft=%{&ft}][fo=%{&fo}]\ %l,%c%V%)\ %P

" Go to last position in file
au BufReadPost *
            \ if line("'\"") > 0 && line("'\"") <= line("$") |
            \   exe "normal g`\"" |
            \ endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key bindings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use space bar as leader
let mapleader=" "
let maplocalleader=" "

" Disable arrow keys and navigation keys
nnoremap <up>       <nop>
nnoremap <down>     <nop>
nnoremap <left>     <nop>
nnoremap <right>    <nop>
nnoremap <pageup>   <nop>
nnoremap <pagedown> <nop>
nnoremap <home>     <nop>
nnoremap <end>      <nop>
nnoremap <insert>   <nop>
nnoremap <delete>   <nop>
inoremap <up>       <nop>
inoremap <down>     <nop>
inoremap <left>     <nop>
inoremap <right>    <nop>
inoremap <pageup>   <nop>
inoremap <pagedown> <nop>
inoremap <home>     <nop>
inoremap <end>      <nop>
inoremap <insert>   <nop>
inoremap <delete>   <nop>
vnoremap <up>       <nop>
vnoremap <down>     <nop>
vnoremap <left>     <nop>
vnoremap <right>    <nop>
vnoremap <pageup>   <nop>
vnoremap <pagedown> <nop>
vnoremap <home>     <nop>
vnoremap <end>      <nop>
vnoremap <insert>   <nop>
vnoremap <delete>   <nop>

" Disable F1 for help
inoremap <f1> <nop>
nnoremap <f1> <nop>
vnoremap <f1> <nop>

" Mappings
nnoremap <C-j> <nop>
nnoremap <C-k> <nop>
nnoremap <C-h> <C-w>w
nnoremap <C-l> <C-w>W
nnoremap <C-d> <C-w>q

nnoremap <leader>h :noh<cr>
nnoremap <leader>r :redraw!<cr>
nnoremap <leader>f zA<cr>
nnoremap <silent><leader>w :if &fo=~'t' | setl fo-=t | else | setl fo+=t | endif<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Appearance
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
colorscheme zoop
if has("gui_running")
    set guioptions+=c
    set guioptions-=m
    set guioptions-=L
    set guioptions-=r
    set guioptions-=T
    if has("gui_gtk2")
        set guifont=Monospace\ 8
    endif
else
    set titlestring=[%t]%(\%m%r%)
    set titlelen=15
    set title
    if &term =~ '^screen'
        set t_ts=k
        set t_fs=\
        " let &titleold = fnamemodify(&shell, ":t")
    endif
endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Disable matchparen, as it's often slow
let loaded_matchparen = 1

" Latex suite
" Prevent latex suite from stealing C-j in normal mode
nnoremap <M-1> <Plug>IMAP_JumpForward

" ATP
let g:atp_Python = 'python2'

" Command-T
set wildignore+=build*/**

" NERDTree
nnoremap <leader>nt :NERDTree 
nnoremap <leader>nb :NERDTreeBookmark 
nnoremap <leader>nn :NERDTreeToggle<cr>
nnoremap <leader>nf :NERDTreeFind<cr>
let NERDTreeQuitOnOpen = 1

" TagList
nnoremap <leader>tt :TlistToggle<cr>
let Tlist_GainFocus_On_ToggleOpen = 1

" LustyJuggler + LustyExplorer
let g:LustyExplorerSuppressRubyWarning = 1
let g:LustyJugglerSuppressRubyWarning = 1

" YankRing
let g:yankring_history_file = '.vim_yankring_history'

" PyFlakes
let g:pyflakes_use_quickfix = 0

" Clang-complete
let g:clang_complete_auto = 1
let g:clang_complete_copen = 1
let g:clang_hl_errors = 1
let g:clang_periodic_quickfix = 0
let g:clang_snippets = 0
" g:clang_conceal_snippets:
let g:clang_exec = 'clang'
let g:clang_user_options = ''
let g:clang_auto_user_options = 'path, .clang_complete'
let g:clang_use_library = 1
let g:clang_library_path = '/usr/lib/llvm'
